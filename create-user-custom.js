// Script para criar um usu√°rio personalizado
const API_BASE = "http://localhost:1000/api";

async function createCustomUser() {
  try {
    console.log("üîÑ Criando usu√°rio personalizado...");

    // Solicitar dados do usu√°rio
    const userData = {
      nomeUser: "Seu Nome", // Substitua pelo seu nome
      emailUser: "seu.email@exemplo.com", // Substitua pelo seu email
      passwordUser: "suasenha123", // Substitua pela sua senha
      nomeOficina: "Sua Oficina",
      cnpjOficina: "12345678000199",
      telefoneOficina: "(11) 99999-9999",
      enderecoOficina: "Seu Endere√ßo",
      userRole: "ADMIN",
    };

    console.log("üìã Dados do usu√°rio:");
    console.log("Nome:", userData.nomeUser);
    console.log("Email:", userData.emailUser);
    console.log("Senha:", userData.passwordUser);
    console.log("");

    const registerResponse = await fetch(`${API_BASE}/auth/register`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(userData),
    });

    if (registerResponse.ok) {
      console.log("‚úÖ Usu√°rio criado com sucesso!");

      // Tentar fazer login
      console.log("üîÑ Fazendo login...");
      const loginResponse = await fetch(`${API_BASE}/auth/login`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email: userData.emailUser,
          password: userData.passwordUser,
        }),
      });

      if (loginResponse.ok) {
        const loginData = await loginResponse.json();
        console.log("‚úÖ Login realizado com sucesso!");
        console.log("üë§ Usu√°rio:", loginData.user.nome);
        console.log("\nüìã Para usar no frontend:");
        console.log("Email:", userData.emailUser);
        console.log("Senha:", userData.passwordUser);
      } else {
        const loginError = await loginResponse.json();
        console.error("‚ùå Erro no login:", loginError);
      }
    } else {
      const error = await registerResponse.json();
      if (error.error?.includes("j√° est√° em uso")) {
        console.log("‚ÑπÔ∏è  Usu√°rio j√° existe, tentando fazer login...");

        const loginResponse = await fetch(`${API_BASE}/auth/login`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            email: userData.emailUser,
            password: userData.passwordUser,
          }),
        });

        if (loginResponse.ok) {
          const loginData = await loginResponse.json();
          console.log("‚úÖ Login realizado com sucesso!");
          console.log("üë§ Usu√°rio:", loginData.user.nome);
          console.log("\nüìã Para usar no frontend:");
          console.log("Email:", userData.emailUser);
          console.log("Senha:", userData.passwordUser);
        } else {
          console.error("‚ùå Erro no login. Verifique se a senha est√° correta.");
        }
      } else {
        console.error("‚ùå Erro ao criar usu√°rio:", error);
      }
    }
  } catch (error) {
    console.error("‚ùå Erro de conex√£o:", error.message);
    console.log(
      "‚ö†Ô∏è  Certifique-se de que o backend est√° rodando na porta 1000"
    );
  }
}

console.log("üöÄ CRIADOR DE USU√ÅRIO PERSONALIZADO");
console.log("");
console.log("üìù INSTRU√á√ïES:");
console.log("1. Edite este arquivo e substitua os dados do usu√°rio pelos seus");
console.log("2. Execute: node create-user-custom.js");
console.log("3. Use o email e senha criados para fazer login no sistema");
console.log("");

createCustomUser();
